name: Test and Badge Update

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: write
  pull-requests: write

jobs:
  test-and-update:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run type check
        run: npm run typecheck
        
      - name: Run tests with coverage
        run: npm run test:coverage > test_output.txt 2>&1 || true
        
      - name: Extract test results
        id: test_results
        run: |
          # Extract test results from vitest output
          if grep -q "Tests.*passed" test_output.txt; then
            PASSED=$(grep -o '[0-9]\+ passed' test_output.txt | head -1 | grep -o '[0-9]\+')
            TOTAL_LINE=$(grep -E "Tests.*passed.*skipped" test_output.txt | head -1)
            
            # Try to extract total from the line
            FAILED=$(echo "$TOTAL_LINE" | grep -o '[0-9]\+ failed' | grep -o '[0-9]\+' | head -1 || echo "0")
            SKIPPED=$(echo "$TOTAL_LINE" | grep -o '[0-9]\+ skipped' | grep -o '[0-9]\+' | head -1 || echo "0")
            TOTAL=$((PASSED + FAILED))
            
            echo "passed=$PASSED" >> $GITHUB_OUTPUT
            echo "total=$TOTAL" >> $GITHUB_OUTPUT
            
            if [ "$FAILED" = "0" ]; then
              echo "status=✅ passing" >> $GITHUB_OUTPUT
              echo "test_color=brightgreen" >> $GITHUB_OUTPUT
            else
              echo "status=❌ failing" >> $GITHUB_OUTPUT  
              echo "test_color=red" >> $GITHUB_OUTPUT
            fi
          else
            echo "passed=0" >> $GITHUB_OUTPUT
            echo "total=0" >> $GITHUB_OUTPUT
            echo "status=unknown" >> $GITHUB_OUTPUT
            echo "test_color=lightgrey" >> $GITHUB_OUTPUT
          fi
          
      - name: Display results (for debugging)
        run: |
          echo "Test Results:"
          echo "Passed: ${{ steps.test_results.outputs.passed }}"
          echo "Total: ${{ steps.test_results.outputs.total }}"
          echo "Status: ${{ steps.test_results.outputs.status }}"
          echo "Color: ${{ steps.test_results.outputs.test_color }}"
          
      - name: Create Pull Request with updated badges (if needed)
        if: github.ref == 'refs/heads/main' && steps.test_results.outputs.passed != ''
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "🤖 Update test badges - ${{ steps.test_results.outputs.passed }}/${{ steps.test_results.outputs.total }} tests passing"
          title: "🤖 Automated Badge Update"
          body: |
            ## Test Results Update
            
            - **Tests**: ${{ steps.test_results.outputs.passed }}/${{ steps.test_results.outputs.total }} passing
            - **Status**: ${{ steps.test_results.outputs.status }}
            
            This PR updates the badges in the README with the latest test results.
            
            Generated by GitHub Actions.
          branch: update-badges
          base: main
          
      - name: Upload test output (for debugging)
        uses: actions/upload-artifact@v4
        with:
          name: test-output
          path: test_output.txt